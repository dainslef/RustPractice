/**
 * 212. Word Search II
 * https://leetcode.com/problems/word-search-ii/
 *
 * Given a 2D board and a list of words from the dictionary, find all words in the board.
 *
 * Each word must be constructed from letters of sequentially adjacent cell, where "adjacent" cells are those horizontally or vertically neighboring. The same letter cell may not be used more than once in a word.
 *
 *
 *
 * Example:
 *
 * Input:
 * board = [
 *   ['o','a','a','n'],
 *   ['e','t','a','e'],
 *   ['i','h','k','r'],
 *   ['i','f','l','v']
 * ]
 * words = ["oath","pea","eat","rain"]
 *
 * Output: ["eat","oath"]
 */

/**
 * Runtime: 80 ms, faster than 16.28% of Rust online submissions for Word Search II.
 * Memory Usage: 22.8 MB, less than 100.00% of Rust online submissions for Word Search II.
 */
fn find_words(board: Vec<Vec<char>>, words: Vec<String>) -> Vec<String> {
  if board.is_empty() || board[0].is_empty() {
    return vec![];
  }

  use std::collections::HashMap;

  let mut out = vec![];
  let mut caches: HashMap<String, Vec<Vec<(usize, usize)>>> = HashMap::new();
  let (row, column) = (board.len(), board[0].len());

  for word in words {
    let mut current_str = String::new();
    for c in word.chars() {
      let mut next: Vec<Vec<(usize, usize)>> = vec![];
      let last_str = current_str.clone();
      current_str += &c.to_string();

      match (caches.get(&last_str), caches.get(&current_str)) {
        (_, Some(_)) => continue,
        (Some(last_state), None) => {
          for indexes in last_state {
            macro_rules! check {
              ($y: expr, $x: expr, $condition: expr) => {
                // check if the target char match the word's next char
                // check if the index has been used
                if $condition && !indexes.contains(&($y, $x)) && board[$y][$x] == c {
                  let mut next_indexes = indexes.clone();
                  next_indexes.push(($y, $x));
                  next.push(next_indexes);
                }
              };
            }
            if let Some((y, x)) = indexes.last() {
              check!(*y - 1, *x, *y > 0);
              check!(*y, *x - 1, *x > 0);
              check!(*y + 1, *x, *y + 1 < row);
              check!(*y, *x + 1, *x + 1 < column);
            }
          }
        }
        (None, _) => {
          for y in 0..row {
            for x in 0..column {
              if board[y][x] == c {
                next.push(vec![(y, x)]);
              }
            }
          }
        }
      }

      caches.insert(current_str.clone(), next);
    }

    if caches.get(&word).map(|v| !v.is_empty()).unwrap_or(false) {
      out.push(word);
    }
  }

  out
}

#[test]
fn q212_test() {
  use super::check_element_eq;
  assert_eq!(
    check_element_eq(
      find_words(
        vec![
          vec!['A', 'B', 'C', 'E'],
          vec!['S', 'F', 'C', 'S'],
          vec!['A', 'D', 'E', 'E']
        ],
        string_vec!["EECCBA", "ABCCED", "SEE"],
      ),
      string_vec!["EECCBA", "ABCCED", "SEE"],
    ),
    true
  );
  assert_eq!(
    check_element_eq(
      find_words(
        vec![
          vec!['o', 'a', 'a', 'n'],
          vec!['e', 't', 'a', 'e'],
          vec!['i', 'h', 'k', 'r'],
          vec!['i', 'f', 'l', 'v'],
        ],
        string_vec!["oath", "pea", "eat", "rain"],
      ),
      string_vec!["eat", "oath"],
    ),
    true
  );
  assert_eq!(
    check_element_eq(
      find_words(
        vec![
          vec!['a', 'a', 'a', 'a'],
          vec!['a', 'a', 'a', 'a'],
          vec!['a', 'a', 'a', 'a'],
          vec!['a', 'a', 'a', 'a'],
          vec!['b', 'c', 'd', 'e'],
          vec!['f', 'g', 'h', 'i'],
          vec!['j', 'k', 'l', 'm'],
          vec!['n', 'o', 'p', 'q'],
          vec!['r', 's', 't', 'u'],
          vec!['v', 'w', 'x', 'y'],
          vec!['z', 'z', 'z', 'z']
        ],
        string_vec![
          "aaaaaaaaaaaaaaaa",
          "aaaaaaaaaaaaaaab",
          "aaaaaaaaaaaaaaac",
          "aaaaaaaaaaaaaaad",
          "aaaaaaaaaaaaaaae",
          "aaaaaaaaaaaaaaaf",
          "aaaaaaaaaaaaaaag",
          "aaaaaaaaaaaaaaah",
          "aaaaaaaaaaaaaaai",
          "aaaaaaaaaaaaaaaj",
          "aaaaaaaaaaaaaaak",
          "aaaaaaaaaaaaaaal",
          "aaaaaaaaaaaaaaam",
          "aaaaaaaaaaaaaaan",
          "aaaaaaaaaaaaaaao",
          "aaaaaaaaaaaaaaap",
          "aaaaaaaaaaaaaaaq",
          "aaaaaaaaaaaaaaar",
          "aaaaaaaaaaaaaaas",
          "aaaaaaaaaaaaaaat",
          "aaaaaaaaaaaaaaau",
          "aaaaaaaaaaaaaaav",
          "aaaaaaaaaaaaaaaw",
          "aaaaaaaaaaaaaaax",
          "aaaaaaaaaaaaaaay",
          "aaaaaaaaaaaaaaaz",
          "aaaaaaaaaaaaaaba",
          "aaaaaaaaaaaaaabb",
          "aaaaaaaaaaaaaabc",
          "aaaaaaaaaaaaaabd",
          "aaaaaaaaaaaaaabe",
          "aaaaaaaaaaaaaabf",
          "aaaaaaaaaaaaaabg",
          "aaaaaaaaaaaaaabh",
          "aaaaaaaaaaaaaabi",
          "aaaaaaaaaaaaaabj",
          "aaaaaaaaaaaaaabk",
          "aaaaaaaaaaaaaabl",
          "aaaaaaaaaaaaaabm",
          "aaaaaaaaaaaaaabn",
          "aaaaaaaaaaaaaabo",
          "aaaaaaaaaaaaaabp",
          "aaaaaaaaaaaaaabq",
          "aaaaaaaaaaaaaabr",
          "aaaaaaaaaaaaaabs",
          "aaaaaaaaaaaaaabt",
          "aaaaaaaaaaaaaabu",
          "aaaaaaaaaaaaaabv",
          "aaaaaaaaaaaaaabw",
          "aaaaaaaaaaaaaabx",
          "aaaaaaaaaaaaaaby",
          "aaaaaaaaaaaaaabz",
          "aaaaaaaaaaaaaaca",
          "aaaaaaaaaaaaaacb",
          "aaaaaaaaaaaaaacc",
          "aaaaaaaaaaaaaacd",
          "aaaaaaaaaaaaaace",
          "aaaaaaaaaaaaaacf",
          "aaaaaaaaaaaaaacg",
          "aaaaaaaaaaaaaach",
          "aaaaaaaaaaaaaaci",
          "aaaaaaaaaaaaaacj",
          "aaaaaaaaaaaaaack",
          "aaaaaaaaaaaaaacl",
          "aaaaaaaaaaaaaacm",
          "aaaaaaaaaaaaaacn",
          "aaaaaaaaaaaaaaco",
          "aaaaaaaaaaaaaacp",
          "aaaaaaaaaaaaaacq",
          "aaaaaaaaaaaaaacr",
          "aaaaaaaaaaaaaacs",
          "aaaaaaaaaaaaaact",
          "aaaaaaaaaaaaaacu",
          "aaaaaaaaaaaaaacv",
          "aaaaaaaaaaaaaacw",
          "aaaaaaaaaaaaaacx",
          "aaaaaaaaaaaaaacy",
          "aaaaaaaaaaaaaacz",
          "aaaaaaaaaaaaaada",
          "aaaaaaaaaaaaaadb",
          "aaaaaaaaaaaaaadc",
          "aaaaaaaaaaaaaadd",
          "aaaaaaaaaaaaaade",
          "aaaaaaaaaaaaaadf",
          "aaaaaaaaaaaaaadg",
          "aaaaaaaaaaaaaadh",
          "aaaaaaaaaaaaaadi",
          "aaaaaaaaaaaaaadj",
          "aaaaaaaaaaaaaadk",
          "aaaaaaaaaaaaaadl",
          "aaaaaaaaaaaaaadm",
          "aaaaaaaaaaaaaadn",
          "aaaaaaaaaaaaaado",
          "aaaaaaaaaaaaaadp",
          "aaaaaaaaaaaaaadq",
          "aaaaaaaaaaaaaadr",
          "aaaaaaaaaaaaaads",
          "aaaaaaaaaaaaaadt",
          "aaaaaaaaaaaaaadu",
          "aaaaaaaaaaaaaadv",
          "aaaaaaaaaaaaaadw",
          "aaaaaaaaaaaaaadx",
          "aaaaaaaaaaaaaady",
          "aaaaaaaaaaaaaadz",
          "aaaaaaaaaaaaaaea",
          "aaaaaaaaaaaaaaeb",
          "aaaaaaaaaaaaaaec",
          "aaaaaaaaaaaaaaed",
          "aaaaaaaaaaaaaaee",
          "aaaaaaaaaaaaaaef",
          "aaaaaaaaaaaaaaeg",
          "aaaaaaaaaaaaaaeh",
          "aaaaaaaaaaaaaaei",
          "aaaaaaaaaaaaaaej",
          "aaaaaaaaaaaaaaek",
          "aaaaaaaaaaaaaael",
          "aaaaaaaaaaaaaaem",
          "aaaaaaaaaaaaaaen",
          "aaaaaaaaaaaaaaeo",
          "aaaaaaaaaaaaaaep",
          "aaaaaaaaaaaaaaeq",
          "aaaaaaaaaaaaaaer",
          "aaaaaaaaaaaaaaes",
          "aaaaaaaaaaaaaaet",
          "aaaaaaaaaaaaaaeu",
          "aaaaaaaaaaaaaaev",
          "aaaaaaaaaaaaaaew",
          "aaaaaaaaaaaaaaex",
          "aaaaaaaaaaaaaaey",
          "aaaaaaaaaaaaaaez",
          "aaaaaaaaaaaaaafa",
          "aaaaaaaaaaaaaafb",
          "aaaaaaaaaaaaaafc",
          "aaaaaaaaaaaaaafd",
          "aaaaaaaaaaaaaafe",
          "aaaaaaaaaaaaaaff",
          "aaaaaaaaaaaaaafg",
          "aaaaaaaaaaaaaafh",
          "aaaaaaaaaaaaaafi",
          "aaaaaaaaaaaaaafj",
          "aaaaaaaaaaaaaafk",
          "aaaaaaaaaaaaaafl",
          "aaaaaaaaaaaaaafm",
          "aaaaaaaaaaaaaafn",
          "aaaaaaaaaaaaaafo",
          "aaaaaaaaaaaaaafp",
          "aaaaaaaaaaaaaafq",
          "aaaaaaaaaaaaaafr",
          "aaaaaaaaaaaaaafs",
          "aaaaaaaaaaaaaaft",
          "aaaaaaaaaaaaaafu",
          "aaaaaaaaaaaaaafv",
          "aaaaaaaaaaaaaafw",
          "aaaaaaaaaaaaaafx",
          "aaaaaaaaaaaaaafy",
          "aaaaaaaaaaaaaafz",
          "aaaaaaaaaaaaaaga",
          "aaaaaaaaaaaaaagb",
          "aaaaaaaaaaaaaagc",
          "aaaaaaaaaaaaaagd",
          "aaaaaaaaaaaaaage",
          "aaaaaaaaaaaaaagf",
          "aaaaaaaaaaaaaagg",
          "aaaaaaaaaaaaaagh",
          "aaaaaaaaaaaaaagi",
          "aaaaaaaaaaaaaagj",
          "aaaaaaaaaaaaaagk",
          "aaaaaaaaaaaaaagl",
          "aaaaaaaaaaaaaagm",
          "aaaaaaaaaaaaaagn",
          "aaaaaaaaaaaaaago",
          "aaaaaaaaaaaaaagp",
          "aaaaaaaaaaaaaagq",
          "aaaaaaaaaaaaaagr",
          "aaaaaaaaaaaaaags",
          "aaaaaaaaaaaaaagt",
          "aaaaaaaaaaaaaagu",
          "aaaaaaaaaaaaaagv",
          "aaaaaaaaaaaaaagw",
          "aaaaaaaaaaaaaagx",
          "aaaaaaaaaaaaaagy",
          "aaaaaaaaaaaaaagz",
          "aaaaaaaaaaaaaaha",
          "aaaaaaaaaaaaaahb",
          "aaaaaaaaaaaaaahc",
          "aaaaaaaaaaaaaahd",
          "aaaaaaaaaaaaaahe",
          "aaaaaaaaaaaaaahf",
          "aaaaaaaaaaaaaahg",
          "aaaaaaaaaaaaaahh",
          "aaaaaaaaaaaaaahi",
          "aaaaaaaaaaaaaahj",
          "aaaaaaaaaaaaaahk",
          "aaaaaaaaaaaaaahl",
          "aaaaaaaaaaaaaahm",
          "aaaaaaaaaaaaaahn",
          "aaaaaaaaaaaaaaho",
          "aaaaaaaaaaaaaahp",
          "aaaaaaaaaaaaaahq",
          "aaaaaaaaaaaaaahr",
          "aaaaaaaaaaaaaahs",
          "aaaaaaaaaaaaaaht",
          "aaaaaaaaaaaaaahu",
          "aaaaaaaaaaaaaahv",
          "aaaaaaaaaaaaaahw",
          "aaaaaaaaaaaaaahx",
          "aaaaaaaaaaaaaahy",
          "aaaaaaaaaaaaaahz",
          "aaaaaaaaaaaaaaia",
          "aaaaaaaaaaaaaaib",
          "aaaaaaaaaaaaaaic",
          "aaaaaaaaaaaaaaid",
          "aaaaaaaaaaaaaaie",
          "aaaaaaaaaaaaaaif",
          "aaaaaaaaaaaaaaig",
          "aaaaaaaaaaaaaaih",
          "aaaaaaaaaaaaaaii",
          "aaaaaaaaaaaaaaij",
          "aaaaaaaaaaaaaaik",
          "aaaaaaaaaaaaaail",
          "aaaaaaaaaaaaaaim",
          "aaaaaaaaaaaaaain",
          "aaaaaaaaaaaaaaio",
          "aaaaaaaaaaaaaaip",
          "aaaaaaaaaaaaaaiq",
          "aaaaaaaaaaaaaair",
          "aaaaaaaaaaaaaais",
          "aaaaaaaaaaaaaait",
          "aaaaaaaaaaaaaaiu",
          "aaaaaaaaaaaaaaiv",
          "aaaaaaaaaaaaaaiw",
          "aaaaaaaaaaaaaaix",
          "aaaaaaaaaaaaaaiy",
          "aaaaaaaaaaaaaaiz",
          "aaaaaaaaaaaaaaja",
          "aaaaaaaaaaaaaajb",
          "aaaaaaaaaaaaaajc",
          "aaaaaaaaaaaaaajd",
          "aaaaaaaaaaaaaaje",
          "aaaaaaaaaaaaaajf",
          "aaaaaaaaaaaaaajg",
          "aaaaaaaaaaaaaajh",
          "aaaaaaaaaaaaaaji",
          "aaaaaaaaaaaaaajj",
          "aaaaaaaaaaaaaajk",
          "aaaaaaaaaaaaaajl",
          "aaaaaaaaaaaaaajm",
          "aaaaaaaaaaaaaajn",
          "aaaaaaaaaaaaaajo",
          "aaaaaaaaaaaaaajp",
          "aaaaaaaaaaaaaajq",
          "aaaaaaaaaaaaaajr",
          "aaaaaaaaaaaaaajs",
          "aaaaaaaaaaaaaajt",
          "aaaaaaaaaaaaaaju",
          "aaaaaaaaaaaaaajv",
          "aaaaaaaaaaaaaajw",
          "aaaaaaaaaaaaaajx",
          "aaaaaaaaaaaaaajy",
          "aaaaaaaaaaaaaajz",
          "aaaaaaaaaaaaaaka",
          "aaaaaaaaaaaaaakb",
          "aaaaaaaaaaaaaakc",
          "aaaaaaaaaaaaaakd",
          "aaaaaaaaaaaaaake",
          "aaaaaaaaaaaaaakf",
          "aaaaaaaaaaaaaakg",
          "aaaaaaaaaaaaaakh",
          "aaaaaaaaaaaaaaki",
          "aaaaaaaaaaaaaakj",
          "aaaaaaaaaaaaaakk",
          "aaaaaaaaaaaaaakl",
          "aaaaaaaaaaaaaakm",
          "aaaaaaaaaaaaaakn",
          "aaaaaaaaaaaaaako",
          "aaaaaaaaaaaaaakp",
          "aaaaaaaaaaaaaakq",
          "aaaaaaaaaaaaaakr",
          "aaaaaaaaaaaaaaks",
          "aaaaaaaaaaaaaakt",
          "aaaaaaaaaaaaaaku",
          "aaaaaaaaaaaaaakv",
          "aaaaaaaaaaaaaakw",
          "aaaaaaaaaaaaaakx",
          "aaaaaaaaaaaaaaky",
          "aaaaaaaaaaaaaakz",
          "aaaaaaaaaaaaaala",
          "aaaaaaaaaaaaaalb",
          "aaaaaaaaaaaaaalc",
          "aaaaaaaaaaaaaald",
          "aaaaaaaaaaaaaale",
          "aaaaaaaaaaaaaalf",
          "aaaaaaaaaaaaaalg",
          "aaaaaaaaaaaaaalh",
          "aaaaaaaaaaaaaali",
          "aaaaaaaaaaaaaalj",
          "aaaaaaaaaaaaaalk",
          "aaaaaaaaaaaaaall",
          "aaaaaaaaaaaaaalm",
          "aaaaaaaaaaaaaaln",
          "aaaaaaaaaaaaaalo",
          "aaaaaaaaaaaaaalp",
          "aaaaaaaaaaaaaalq",
          "aaaaaaaaaaaaaalr",
          "aaaaaaaaaaaaaals",
          "aaaaaaaaaaaaaalt",
          "aaaaaaaaaaaaaalu",
          "aaaaaaaaaaaaaalv",
          "aaaaaaaaaaaaaalw",
          "aaaaaaaaaaaaaalx",
          "aaaaaaaaaaaaaaly",
          "aaaaaaaaaaaaaalz",
          "aaaaaaaaaaaaaama",
          "aaaaaaaaaaaaaamb",
          "aaaaaaaaaaaaaamc",
          "aaaaaaaaaaaaaamd",
          "aaaaaaaaaaaaaame",
          "aaaaaaaaaaaaaamf",
          "aaaaaaaaaaaaaamg",
          "aaaaaaaaaaaaaamh",
          "aaaaaaaaaaaaaami",
          "aaaaaaaaaaaaaamj",
          "aaaaaaaaaaaaaamk",
          "aaaaaaaaaaaaaaml",
          "aaaaaaaaaaaaaamm",
          "aaaaaaaaaaaaaamn",
          "aaaaaaaaaaaaaamo",
          "aaaaaaaaaaaaaamp",
          "aaaaaaaaaaaaaamq",
          "aaaaaaaaaaaaaamr",
          "aaaaaaaaaaaaaams",
          "aaaaaaaaaaaaaamt",
          "aaaaaaaaaaaaaamu",
          "aaaaaaaaaaaaaamv",
          "aaaaaaaaaaaaaamw",
          "aaaaaaaaaaaaaamx",
          "aaaaaaaaaaaaaamy",
          "aaaaaaaaaaaaaamz",
          "aaaaaaaaaaaaaana",
          "aaaaaaaaaaaaaanb",
          "aaaaaaaaaaaaaanc",
          "aaaaaaaaaaaaaand",
          "aaaaaaaaaaaaaane",
          "aaaaaaaaaaaaaanf",
          "aaaaaaaaaaaaaang",
          "aaaaaaaaaaaaaanh",
          "aaaaaaaaaaaaaani",
          "aaaaaaaaaaaaaanj",
          "aaaaaaaaaaaaaank",
          "aaaaaaaaaaaaaanl",
          "aaaaaaaaaaaaaanm",
          "aaaaaaaaaaaaaann",
          "aaaaaaaaaaaaaano",
          "aaaaaaaaaaaaaanp",
          "aaaaaaaaaaaaaanq",
          "aaaaaaaaaaaaaanr",
          "aaaaaaaaaaaaaans",
          "aaaaaaaaaaaaaant",
          "aaaaaaaaaaaaaanu",
          "aaaaaaaaaaaaaanv",
          "aaaaaaaaaaaaaanw",
          "aaaaaaaaaaaaaanx",
          "aaaaaaaaaaaaaany",
          "aaaaaaaaaaaaaanz",
          "aaaaaaaaaaaaaaoa",
          "aaaaaaaaaaaaaaob",
          "aaaaaaaaaaaaaaoc",
          "aaaaaaaaaaaaaaod",
          "aaaaaaaaaaaaaaoe",
          "aaaaaaaaaaaaaaof",
          "aaaaaaaaaaaaaaog",
          "aaaaaaaaaaaaaaoh",
          "aaaaaaaaaaaaaaoi",
          "aaaaaaaaaaaaaaoj",
          "aaaaaaaaaaaaaaok",
          "aaaaaaaaaaaaaaol",
          "aaaaaaaaaaaaaaom",
          "aaaaaaaaaaaaaaon",
          "aaaaaaaaaaaaaaoo",
          "aaaaaaaaaaaaaaop",
          "aaaaaaaaaaaaaaoq",
          "aaaaaaaaaaaaaaor",
          "aaaaaaaaaaaaaaos",
          "aaaaaaaaaaaaaaot",
          "aaaaaaaaaaaaaaou",
          "aaaaaaaaaaaaaaov",
          "aaaaaaaaaaaaaaow",
          "aaaaaaaaaaaaaaox",
          "aaaaaaaaaaaaaaoy",
          "aaaaaaaaaaaaaaoz",
          "aaaaaaaaaaaaaapa",
          "aaaaaaaaaaaaaapb",
          "aaaaaaaaaaaaaapc",
          "aaaaaaaaaaaaaapd",
          "aaaaaaaaaaaaaape",
          "aaaaaaaaaaaaaapf",
          "aaaaaaaaaaaaaapg",
          "aaaaaaaaaaaaaaph",
          "aaaaaaaaaaaaaapi",
          "aaaaaaaaaaaaaapj",
          "aaaaaaaaaaaaaapk",
          "aaaaaaaaaaaaaapl",
          "aaaaaaaaaaaaaapm",
          "aaaaaaaaaaaaaapn",
          "aaaaaaaaaaaaaapo",
          "aaaaaaaaaaaaaapp",
          "aaaaaaaaaaaaaapq",
          "aaaaaaaaaaaaaapr",
          "aaaaaaaaaaaaaaps",
          "aaaaaaaaaaaaaapt",
          "aaaaaaaaaaaaaapu",
          "aaaaaaaaaaaaaapv",
          "aaaaaaaaaaaaaapw",
          "aaaaaaaaaaaaaapx",
          "aaaaaaaaaaaaaapy",
          "aaaaaaaaaaaaaapz",
          "aaaaaaaaaaaaaaqa",
          "aaaaaaaaaaaaaaqb",
          "aaaaaaaaaaaaaaqc",
          "aaaaaaaaaaaaaaqd",
          "aaaaaaaaaaaaaaqe",
          "aaaaaaaaaaaaaaqf",
          "aaaaaaaaaaaaaaqg",
          "aaaaaaaaaaaaaaqh",
          "aaaaaaaaaaaaaaqi",
          "aaaaaaaaaaaaaaqj",
          "aaaaaaaaaaaaaaqk",
          "aaaaaaaaaaaaaaql",
          "aaaaaaaaaaaaaaqm",
          "aaaaaaaaaaaaaaqn",
          "aaaaaaaaaaaaaaqo",
          "aaaaaaaaaaaaaaqp",
          "aaaaaaaaaaaaaaqq",
          "aaaaaaaaaaaaaaqr",
          "aaaaaaaaaaaaaaqs",
          "aaaaaaaaaaaaaaqt",
          "aaaaaaaaaaaaaaqu",
          "aaaaaaaaaaaaaaqv",
          "aaaaaaaaaaaaaaqw",
          "aaaaaaaaaaaaaaqx",
          "aaaaaaaaaaaaaaqy",
          "aaaaaaaaaaaaaaqz",
          "aaaaaaaaaaaaaara",
          "aaaaaaaaaaaaaarb",
          "aaaaaaaaaaaaaarc",
          "aaaaaaaaaaaaaard",
          "aaaaaaaaaaaaaare",
          "aaaaaaaaaaaaaarf",
          "aaaaaaaaaaaaaarg",
          "aaaaaaaaaaaaaarh",
          "aaaaaaaaaaaaaari",
          "aaaaaaaaaaaaaarj",
          "aaaaaaaaaaaaaark",
          "aaaaaaaaaaaaaarl",
          "aaaaaaaaaaaaaarm",
          "aaaaaaaaaaaaaarn",
          "aaaaaaaaaaaaaaro",
          "aaaaaaaaaaaaaarp",
          "aaaaaaaaaaaaaarq",
          "aaaaaaaaaaaaaarr",
          "aaaaaaaaaaaaaars",
          "aaaaaaaaaaaaaart",
          "aaaaaaaaaaaaaaru",
          "aaaaaaaaaaaaaarv",
          "aaaaaaaaaaaaaarw",
          "aaaaaaaaaaaaaarx",
          "aaaaaaaaaaaaaary",
          "aaaaaaaaaaaaaarz",
          "aaaaaaaaaaaaaasa",
          "aaaaaaaaaaaaaasb",
          "aaaaaaaaaaaaaasc",
          "aaaaaaaaaaaaaasd",
          "aaaaaaaaaaaaaase",
          "aaaaaaaaaaaaaasf",
          "aaaaaaaaaaaaaasg",
          "aaaaaaaaaaaaaash",
          "aaaaaaaaaaaaaasi",
          "aaaaaaaaaaaaaasj",
          "aaaaaaaaaaaaaask",
          "aaaaaaaaaaaaaasl",
          "aaaaaaaaaaaaaasm",
          "aaaaaaaaaaaaaasn",
          "aaaaaaaaaaaaaaso",
          "aaaaaaaaaaaaaasp",
          "aaaaaaaaaaaaaasq",
          "aaaaaaaaaaaaaasr",
          "aaaaaaaaaaaaaass",
          "aaaaaaaaaaaaaast",
          "aaaaaaaaaaaaaasu",
          "aaaaaaaaaaaaaasv",
          "aaaaaaaaaaaaaasw",
          "aaaaaaaaaaaaaasx",
          "aaaaaaaaaaaaaasy",
          "aaaaaaaaaaaaaasz",
          "aaaaaaaaaaaaaata",
          "aaaaaaaaaaaaaatb",
          "aaaaaaaaaaaaaatc",
          "aaaaaaaaaaaaaatd",
          "aaaaaaaaaaaaaate",
          "aaaaaaaaaaaaaatf",
          "aaaaaaaaaaaaaatg",
          "aaaaaaaaaaaaaath",
          "aaaaaaaaaaaaaati",
          "aaaaaaaaaaaaaatj",
          "aaaaaaaaaaaaaatk",
          "aaaaaaaaaaaaaatl",
          "aaaaaaaaaaaaaatm",
          "aaaaaaaaaaaaaatn",
          "aaaaaaaaaaaaaato",
          "aaaaaaaaaaaaaatp",
          "aaaaaaaaaaaaaatq",
          "aaaaaaaaaaaaaatr",
          "aaaaaaaaaaaaaats",
          "aaaaaaaaaaaaaatt",
          "aaaaaaaaaaaaaatu",
          "aaaaaaaaaaaaaatv",
          "aaaaaaaaaaaaaatw",
          "aaaaaaaaaaaaaatx",
          "aaaaaaaaaaaaaaty",
          "aaaaaaaaaaaaaatz",
          "aaaaaaaaaaaaaaua",
          "aaaaaaaaaaaaaaub",
          "aaaaaaaaaaaaaauc",
          "aaaaaaaaaaaaaaud",
          "aaaaaaaaaaaaaaue",
          "aaaaaaaaaaaaaauf",
          "aaaaaaaaaaaaaaug",
          "aaaaaaaaaaaaaauh",
          "aaaaaaaaaaaaaaui",
          "aaaaaaaaaaaaaauj",
          "aaaaaaaaaaaaaauk",
          "aaaaaaaaaaaaaaul",
          "aaaaaaaaaaaaaaum",
          "aaaaaaaaaaaaaaun",
          "aaaaaaaaaaaaaauo",
          "aaaaaaaaaaaaaaup",
          "aaaaaaaaaaaaaauq",
          "aaaaaaaaaaaaaaur",
          "aaaaaaaaaaaaaaus",
          "aaaaaaaaaaaaaaut",
          "aaaaaaaaaaaaaauu",
          "aaaaaaaaaaaaaauv",
          "aaaaaaaaaaaaaauw",
          "aaaaaaaaaaaaaaux",
          "aaaaaaaaaaaaaauy",
          "aaaaaaaaaaaaaauz",
          "aaaaaaaaaaaaaava",
          "aaaaaaaaaaaaaavb",
          "aaaaaaaaaaaaaavc",
          "aaaaaaaaaaaaaavd",
          "aaaaaaaaaaaaaave",
          "aaaaaaaaaaaaaavf",
          "aaaaaaaaaaaaaavg",
          "aaaaaaaaaaaaaavh",
          "aaaaaaaaaaaaaavi",
          "aaaaaaaaaaaaaavj",
          "aaaaaaaaaaaaaavk",
          "aaaaaaaaaaaaaavl",
          "aaaaaaaaaaaaaavm",
          "aaaaaaaaaaaaaavn",
          "aaaaaaaaaaaaaavo",
          "aaaaaaaaaaaaaavp",
          "aaaaaaaaaaaaaavq",
          "aaaaaaaaaaaaaavr",
          "aaaaaaaaaaaaaavs",
          "aaaaaaaaaaaaaavt",
          "aaaaaaaaaaaaaavu",
          "aaaaaaaaaaaaaavv",
          "aaaaaaaaaaaaaavw",
          "aaaaaaaaaaaaaavx",
          "aaaaaaaaaaaaaavy",
          "aaaaaaaaaaaaaavz",
          "aaaaaaaaaaaaaawa",
          "aaaaaaaaaaaaaawb",
          "aaaaaaaaaaaaaawc",
          "aaaaaaaaaaaaaawd",
          "aaaaaaaaaaaaaawe",
          "aaaaaaaaaaaaaawf",
          "aaaaaaaaaaaaaawg",
          "aaaaaaaaaaaaaawh",
          "aaaaaaaaaaaaaawi",
          "aaaaaaaaaaaaaawj",
          "aaaaaaaaaaaaaawk",
          "aaaaaaaaaaaaaawl",
          "aaaaaaaaaaaaaawm",
          "aaaaaaaaaaaaaawn",
          "aaaaaaaaaaaaaawo",
          "aaaaaaaaaaaaaawp",
          "aaaaaaaaaaaaaawq",
          "aaaaaaaaaaaaaawr",
          "aaaaaaaaaaaaaaws",
          "aaaaaaaaaaaaaawt",
          "aaaaaaaaaaaaaawu",
          "aaaaaaaaaaaaaawv",
          "aaaaaaaaaaaaaaww",
          "aaaaaaaaaaaaaawx",
          "aaaaaaaaaaaaaawy",
          "aaaaaaaaaaaaaawz",
          "aaaaaaaaaaaaaaxa",
          "aaaaaaaaaaaaaaxb",
          "aaaaaaaaaaaaaaxc",
          "aaaaaaaaaaaaaaxd",
          "aaaaaaaaaaaaaaxe",
          "aaaaaaaaaaaaaaxf",
          "aaaaaaaaaaaaaaxg",
          "aaaaaaaaaaaaaaxh",
          "aaaaaaaaaaaaaaxi",
          "aaaaaaaaaaaaaaxj",
          "aaaaaaaaaaaaaaxk",
          "aaaaaaaaaaaaaaxl",
          "aaaaaaaaaaaaaaxm",
          "aaaaaaaaaaaaaaxn",
          "aaaaaaaaaaaaaaxo",
          "aaaaaaaaaaaaaaxp",
          "aaaaaaaaaaaaaaxq",
          "aaaaaaaaaaaaaaxr",
          "aaaaaaaaaaaaaaxs",
          "aaaaaaaaaaaaaaxt",
          "aaaaaaaaaaaaaaxu",
          "aaaaaaaaaaaaaaxv",
          "aaaaaaaaaaaaaaxw",
          "aaaaaaaaaaaaaaxx",
          "aaaaaaaaaaaaaaxy",
          "aaaaaaaaaaaaaaxz",
          "aaaaaaaaaaaaaaya",
          "aaaaaaaaaaaaaayb",
          "aaaaaaaaaaaaaayc",
          "aaaaaaaaaaaaaayd",
          "aaaaaaaaaaaaaaye",
          "aaaaaaaaaaaaaayf",
          "aaaaaaaaaaaaaayg",
          "aaaaaaaaaaaaaayh",
          "aaaaaaaaaaaaaayi",
          "aaaaaaaaaaaaaayj",
          "aaaaaaaaaaaaaayk",
          "aaaaaaaaaaaaaayl",
          "aaaaaaaaaaaaaaym",
          "aaaaaaaaaaaaaayn",
          "aaaaaaaaaaaaaayo",
          "aaaaaaaaaaaaaayp",
          "aaaaaaaaaaaaaayq",
          "aaaaaaaaaaaaaayr",
          "aaaaaaaaaaaaaays",
          "aaaaaaaaaaaaaayt",
          "aaaaaaaaaaaaaayu",
          "aaaaaaaaaaaaaayv",
          "aaaaaaaaaaaaaayw",
          "aaaaaaaaaaaaaayx",
          "aaaaaaaaaaaaaayy",
          "aaaaaaaaaaaaaayz",
          "aaaaaaaaaaaaaaza",
          "aaaaaaaaaaaaaazb",
          "aaaaaaaaaaaaaazc",
          "aaaaaaaaaaaaaazd",
          "aaaaaaaaaaaaaaze",
          "aaaaaaaaaaaaaazf",
          "aaaaaaaaaaaaaazg",
          "aaaaaaaaaaaaaazh",
          "aaaaaaaaaaaaaazi",
          "aaaaaaaaaaaaaazj",
          "aaaaaaaaaaaaaazk",
          "aaaaaaaaaaaaaazl",
          "aaaaaaaaaaaaaazm",
          "aaaaaaaaaaaaaazn",
          "aaaaaaaaaaaaaazo",
          "aaaaaaaaaaaaaazp",
          "aaaaaaaaaaaaaazq",
          "aaaaaaaaaaaaaazr",
          "aaaaaaaaaaaaaazs",
          "aaaaaaaaaaaaaazt",
          "aaaaaaaaaaaaaazu",
          "aaaaaaaaaaaaaazv",
          "aaaaaaaaaaaaaazw",
          "aaaaaaaaaaaaaazx",
          "aaaaaaaaaaaaaazy",
          "aaaaaaaaaaaaaazz"
        ],
      ),
      string_vec![
        "aaaaaaaaaaaaaabf",
        "aaaaaaaaaaaaaaed",
        "aaaaaaaaaaaaaaad",
        "aaaaaaaaaaaaaaae",
        "aaaaaaaaaaaaaacg",
        "aaaaaaaaaaaaaadc",
        "aaaaaaaaaaaaaadh",
        "aaaaaaaaaaaaaacd",
        "aaaaaaaaaaaaaaei",
        "aaaaaaaaaaaaaacb",
        "aaaaaaaaaaaaaaac",
        "aaaaaaaaaaaaaaab",
        "aaaaaaaaaaaaaaaa",
        "aaaaaaaaaaaaaabc",
        "aaaaaaaaaaaaaade"
      ],
    ),
    true
  );
}
